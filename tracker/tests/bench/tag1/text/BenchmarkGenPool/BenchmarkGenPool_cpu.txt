File: test.test
Type: cpu
Time: 2025-07-22 09:46:27 PDT
Duration: 13.55s, Total samples = 75.73s (558.98%)
Showing nodes accounting for 75.73s, 100% of 75.73s total
      flat  flat%   sum%        cum   cum%
     0.04s 0.053% 0.053%     74.70s 98.64%  testing.(*B).RunParallel.func1
     0.01s 0.013% 0.066%     74.61s 98.52%  github.com/AlexsanderHamir/GenPool/test.BenchmarkGenPool.func1
    69.07s 91.21% 91.27%     74.33s 98.15%  github.com/AlexsanderHamir/GenPool/test.cpuIntensiveWorkload (inline)
     5.25s  6.93% 98.20%      5.26s  6.95%  runtime.asyncPreempt
     0.01s 0.013% 98.22%      0.69s  0.91%  runtime.schedule
     0.01s 0.013% 98.23%      0.58s  0.77%  runtime.findRunnable
         0     0% 98.23%      0.57s  0.75%  runtime.mcall
         0     0% 98.23%      0.49s  0.65%  runtime.goexit0
     0.03s  0.04% 98.27%      0.32s  0.42%  runtime.newstack
         0     0% 98.27%      0.29s  0.38%  runtime.gopreempt_m (inline)
         0     0% 98.27%      0.29s  0.38%  runtime.goschedImpl
     0.28s  0.37% 98.64%      0.28s  0.37%  runtime.usleep
         0     0% 98.64%      0.27s  0.36%  runtime.lock (inline)
         0     0% 98.64%      0.27s  0.36%  runtime.lock2
         0     0% 98.64%      0.27s  0.36%  runtime.lockWithRank (inline)
         0     0% 98.64%      0.26s  0.34%  runtime.osyield (inline)
         0     0% 98.64%      0.26s  0.34%  runtime.semasleep
         0     0% 98.64%      0.25s  0.33%  runtime.mPark (inline)
         0     0% 98.64%      0.25s  0.33%  runtime.notesleep
     0.25s  0.33% 98.97%      0.25s  0.33%  runtime.pthread_cond_wait
         0     0% 98.97%      0.25s  0.33%  runtime.stopm
         0     0% 98.97%      0.24s  0.32%  runtime.systemstack
         0     0% 98.97%      0.19s  0.25%  runtime.morestack
     0.03s  0.04% 99.01%      0.13s  0.17%  github.com/AlexsanderHamir/GenPool/pool.(*ShardedPool[go.shape.struct { Name string; Data []uint8; Result int64; github.com/AlexsanderHamir/GenPool/test._ [16]uint8; Fields = github.com/AlexsanderHamir/GenPool/pool.Fields[github.com/AlexsanderHamir/GenPool/test.BenchmarkObject] },go.shape.*github.com/AlexsanderHamir/GenPool/test.BenchmarkObject]).Get
         0     0% 99.01%      0.13s  0.17%  github.com/AlexsanderHamir/GenPool/pool.(*ShardedPool[go.shape.struct { Name string; Data []uint8; Result int64; github.com/AlexsanderHamir/GenPool/test._ [16]uint8; Fields = github.com/AlexsanderHamir/GenPool/pool.Fields[github.com/AlexsanderHamir/GenPool/test.BenchmarkObject] },go.shape.*github.com/AlexsanderHamir/GenPool/test.BenchmarkObject]).Put
         0     0% 99.01%      0.12s  0.16%  runtime.traceWriter.event
         0     0% 99.01%      0.11s  0.15%  runtime.traceEventWriter.event
         0     0% 99.01%      0.10s  0.13%  runtime.execute
         0     0% 99.01%      0.10s  0.13%  runtime.nanotime (inline)
     0.07s 0.092% 99.10%      0.10s  0.13%  runtime.nanotime1
         0     0% 99.10%      0.09s  0.12%  runtime.gcBgMarkWorker.func2
     0.01s 0.013% 99.12%      0.09s  0.12%  runtime.gcDrain
         0     0% 99.12%      0.08s  0.11%  runtime.newproc.func1
         0     0% 99.12%      0.08s  0.11%  runtime.park_m
         0     0% 99.12%      0.08s  0.11%  runtime.traceClockNow (inline)
         0     0% 99.12%      0.08s  0.11%  runtime.traceLocker.GoPreempt (inline)
         0     0% 99.12%      0.08s  0.11%  runtime.traceLocker.GoStart
         0     0% 99.12%      0.08s  0.11%  runtime.traceLocker.GoStop
         0     0% 99.12%      0.07s 0.092%  runtime.(*mheap).allocSpan
     0.07s 0.092% 99.21%      0.07s 0.092%  runtime.madvise
         0     0% 99.21%      0.07s 0.092%  runtime.mallocgc
         0     0% 99.21%      0.06s 0.079%  runtime.(*gcWork).balance
         0     0% 99.21%      0.06s 0.079%  runtime.gcDrainMarkWorkerIdle (inline)
         0     0% 99.21%      0.06s 0.079%  runtime.newobject
     0.01s 0.013% 99.22%      0.06s 0.079%  runtime.newproc1
     0.06s 0.079% 99.30%      0.06s 0.079%  runtime.pthread_cond_signal
         0     0% 99.30%      0.06s 0.079%  runtime.semawakeup
         0     0% 99.30%      0.06s 0.079%  runtime.sysUsed (inline)
         0     0% 99.30%      0.06s 0.079%  runtime.sysUsedOS (inline)
         0     0% 99.30%      0.06s 0.079%  runtime.unlock (inline)
     0.01s 0.013% 99.31%      0.06s 0.079%  runtime.unlock2
         0     0% 99.31%      0.06s 0.079%  runtime.unlockWithRank (inline)
         0     0% 99.31%      0.06s 0.079%  runtime.wakep
         0     0% 99.31%      0.05s 0.066%  github.com/AlexsanderHamir/GenPool/test.allocator
         0     0% 99.31%      0.05s 0.066%  runtime.(*gcControllerState).enlistWorker
         0     0% 99.31%      0.05s 0.066%  runtime.mallocgcSmallScanNoHeader
         0     0% 99.31%      0.05s 0.066%  runtime.preemptM
         0     0% 99.31%      0.05s 0.066%  runtime.preemptone
     0.05s 0.066% 99.38%      0.05s 0.066%  runtime.pthread_kill
         0     0% 99.38%      0.05s 0.066%  runtime.signalM (inline)
     0.04s 0.053% 99.43%      0.04s 0.053%  github.com/AlexsanderHamir/GenPool/pool.(*ShardedPool[go.shape.struct { Name string; Data []uint8; Result int64; github.com/AlexsanderHamir/GenPool/test._ [16]uint8; Fields = github.com/AlexsanderHamir/GenPool/pool.Fields[github.com/AlexsanderHamir/GenPool/test.BenchmarkObject] },go.shape.*github.com/AlexsanderHamir/GenPool/test.BenchmarkObject]).getShard
         0     0% 99.43%      0.04s 0.053%  runtime.(*mheap).alloc.func1
     0.01s 0.013% 99.45%      0.04s 0.053%  runtime.traceLocker.eventWriter
         0     0% 99.45%      0.04s 0.053%  runtime.unlock2Wake
         0     0% 99.45%      0.04s 0.053%  sync/atomic.(*Pointer[go.shape.struct { Name string; Data []uint8; Result int64; github.com/AlexsanderHamir/GenPool/test._ [16]uint8; Fields = github.com/AlexsanderHamir/GenPool/pool.Fields[github.com/AlexsanderHamir/GenPool/test.BenchmarkObject] }]).CompareAndSwap (inline)
     0.04s 0.053% 99.50%      0.04s 0.053%  sync/atomic.CompareAndSwapPointer
         0     0% 99.50%      0.03s  0.04%  github.com/AlexsanderHamir/GenPool/test.BenchmarkGenPool
         0     0% 99.50%      0.03s  0.04%  runtime.(*mheap).allocManual
         0     0% 99.50%      0.03s  0.04%  runtime.casgstatus
         0     0% 99.50%      0.03s  0.04%  runtime.gcBgMarkWorker
         0     0% 99.50%      0.03s  0.04%  runtime.gcDrainMarkWorkerDedicated (inline)
         0     0% 99.50%      0.03s  0.04%  runtime.gfget
         0     0% 99.50%      0.03s  0.04%  runtime.gfget.func2
         0     0% 99.50%      0.03s  0.04%  runtime.globrunqget
     0.03s  0.04% 99.54%      0.03s  0.04%  runtime.libcCall
         0     0% 99.54%      0.03s  0.04%  runtime.newproc
         0     0% 99.54%      0.03s  0.04%  runtime.stackalloc
         0     0% 99.54%      0.03s  0.04%  runtime.stackcacherefill
     0.01s 0.013% 99.55%      0.03s  0.04%  runtime.stackpoolalloc
     0.01s 0.013% 99.56%      0.03s  0.04%  runtime.stealWork
     0.02s 0.026% 99.59%      0.03s  0.04%  runtime.traceWriter.ensure
         0     0% 99.59%      0.03s  0.04%  testing.(*B).RunParallel
         0     0% 99.59%      0.03s  0.04%  testing.(*B).runN
     0.02s 0.026% 99.62%      0.02s 0.026%  runtime.(*gQueue).pop (inline)
         0     0% 99.62%      0.02s 0.026%  runtime.(*mcache).nextFree
         0     0% 99.62%      0.02s 0.026%  runtime.(*mcache).refill
     0.01s 0.013% 99.63%      0.02s 0.026%  runtime.(*mcentral).cacheSpan
     0.02s 0.026% 99.66%      0.02s 0.026%  runtime.(*traceMap).put
         0     0% 99.66%      0.02s 0.026%  runtime.(*traceStackTable).put
     0.02s 0.026% 99.68%      0.02s 0.026%  runtime.acquirem (inline)
         0     0% 99.68%      0.02s 0.026%  runtime.checkIdleGCNoP
         0     0% 99.68%      0.02s 0.026%  runtime.getempty
         0     0% 99.68%      0.02s 0.026%  runtime.notewakeup
         0     0% 99.68%      0.02s 0.026%  runtime.ready
         0     0% 99.68%      0.02s 0.026%  runtime.readyWithTime.goready.func1
         0     0% 99.68%      0.02s 0.026%  runtime.runqgrab
     0.01s 0.013% 99.70%      0.02s 0.026%  runtime.runqput
         0     0% 99.70%      0.02s 0.026%  runtime.runqsteal
         0     0% 99.70%      0.02s 0.026%  runtime.startm
         0     0% 99.70%      0.02s 0.026%  runtime.traceWriter.writeGoStatus
         0     0% 99.70%      0.02s 0.026%  testing.(*B).launch
         0     0% 99.70%      0.01s 0.013%  github.com/AlexsanderHamir/GenPool/pool.(*Fields[go.shape.struct { Name string; Data []uint8; Result int64; github.com/AlexsanderHamir/GenPool/test._ [16]uint8; Fields = github.com/AlexsanderHamir/GenPool/pool.Fields[github.com/AlexsanderHamir/GenPool/test.BenchmarkObject] }]).SetNext
     0.01s 0.013% 99.71%      0.01s 0.013%  github.com/AlexsanderHamir/GenPool/pool.(*ShardedPool[go.shape.struct { Name string; Data []uint8; Result int64; github.com/AlexsanderHamir/GenPool/test._ [16]uint8; Fields = github.com/AlexsanderHamir/GenPool/pool.Fields[github.com/AlexsanderHamir/GenPool/test.BenchmarkObject] },go.shape.*github.com/AlexsanderHamir/GenPool/test.BenchmarkObject]).retrieveFromShard
     0.01s 0.013% 99.72%      0.01s 0.013%  internal/abi.(*Type).Pointers (inline)
         0     0% 99.72%      0.01s 0.013%  internal/poll.(*FD).Write
         0     0% 99.72%      0.01s 0.013%  internal/poll.ignoringEINTRIO (inline)
         0     0% 99.72%      0.01s 0.013%  os.(*File).Write
         0     0% 99.72%      0.01s 0.013%  os.(*File).write (inline)
     0.01s 0.013% 99.74%      0.01s 0.013%  runtime.(*gcControllerState).needIdleMarkWorker (inline)
         0     0% 99.74%      0.01s 0.013%  runtime.(*gcWork).init
         0     0% 99.74%      0.01s 0.013%  runtime.(*gcWork).tryGet
     0.01s 0.013% 99.75%      0.01s 0.013%  runtime.(*lfstack).push
     0.01s 0.013% 99.76%      0.01s 0.013%  runtime.(*mLockProfile).recordUnlock
         0     0% 99.76%      0.01s 0.013%  runtime.(*mcentral).grow
         0     0% 99.76%      0.01s 0.013%  runtime.(*mheap).alloc
     0.01s 0.013% 99.78%      0.01s 0.013%  runtime.(*mspan).heapBitsSmallForAddr
         0     0% 99.78%      0.01s 0.013%  runtime.(*mspan).typePointersOfUnchecked
         0     0% 99.78%      0.01s 0.013%  runtime.(*pageAlloc).scavenge.func1
         0     0% 99.78%      0.01s 0.013%  runtime.(*pageAlloc).scavengeOne
     0.01s 0.013% 99.79%      0.01s 0.013%  runtime.(*profBuf).read
     0.01s 0.013% 99.80%      0.01s 0.013%  runtime.(*timeHistogram).record
         0     0% 99.80%      0.01s 0.013%  runtime.(*timer).unlockAndRun
         0     0% 99.80%      0.01s 0.013%  runtime.(*timers).check
         0     0% 99.80%      0.01s 0.013%  runtime.(*timers).run
         0     0% 99.80%      0.01s 0.013%  runtime.(*traceAdvancerState).start.func1
     0.01s 0.013% 99.82%      0.01s 0.013%  runtime.(*traceBuf).available (inline)
     0.01s 0.013% 99.83%      0.01s 0.013%  runtime.(*traceBuf).byte (inline)
     0.01s 0.013% 99.84%      0.01s 0.013%  runtime.(*traceSchedResourceState).statusWasTraced (inline)
         0     0% 99.84%      0.01s 0.013%  runtime.(*traceStackTable).dump
         0     0% 99.84%      0.01s 0.013%  runtime.(*wakeableSleep).wake
     0.01s 0.013% 99.85%      0.01s 0.013%  runtime.asyncPreempt2
     0.01s 0.013% 99.87%      0.01s 0.013%  runtime.chansend
         0     0% 99.87%      0.01s 0.013%  runtime.forEachPInternal
         0     0% 99.87%      0.01s 0.013%  runtime.gcMarkTermination.forEachP.func6
     0.01s 0.013% 99.88%      0.01s 0.013%  runtime.gdestroy
         0     0% 99.88%      0.01s 0.013%  runtime.getempty.func1
         0     0% 99.88%      0.01s 0.013%  runtime.handoff
         0     0% 99.88%      0.01s 0.013%  runtime.makeslice
         0     0% 99.88%      0.01s 0.013%  runtime.malg
         0     0% 99.88%      0.01s 0.013%  runtime.mallocgcSmallNoscan
     0.01s 0.013% 99.89%      0.01s 0.013%  runtime.memclrNoHeapPointers
     0.01s 0.013% 99.91%      0.01s 0.013%  runtime.nextFreeFast (inline)
         0     0% 99.91%      0.01s 0.013%  runtime.notetsleep
         0     0% 99.91%      0.01s 0.013%  runtime.notetsleep_internal
     0.01s 0.013% 99.92%      0.01s 0.013%  runtime.pidleget
         0     0% 99.92%      0.01s 0.013%  runtime.pidlegetSpinning
     0.01s 0.013% 99.93%      0.01s 0.013%  runtime.procyield
     0.01s 0.013% 99.95%      0.01s 0.013%  runtime.pthread_cond_timedwait_relative_np
         0     0% 99.95%      0.01s 0.013%  runtime.putempty
         0     0% 99.95%      0.01s 0.013%  runtime.runqputslow
         0     0% 99.95%      0.01s 0.013%  runtime.scanobject
         0     0% 99.95%      0.01s 0.013%  runtime.selectnbsend
         0     0% 99.95%      0.01s 0.013%  runtime.sysUnused (inline)
         0     0% 99.95%      0.01s 0.013%  runtime.sysUnusedOS (inline)
         0     0% 99.95%      0.01s 0.013%  runtime.traceAdvance
         0     0% 99.95%      0.01s 0.013%  runtime.traceLocker.GoCreate
         0     0% 99.95%      0.01s 0.013%  runtime.traceLocker.stack (inline)
         0     0% 99.95%      0.01s 0.013%  runtime.traceLocker.startPC
     0.01s 0.013%   100%      0.01s 0.013%  runtime.traceLocker.writer (inline)
         0     0%   100%      0.01s 0.013%  runtime.traceReadCPU
         0     0%   100%      0.01s 0.013%  runtime.traceStack
         0     0%   100%      0.01s 0.013%  runtime.traceStartReadCPU.func1
         0     0%   100%      0.01s 0.013%  runtime.traceStartReadCPU.newWakeableSleep.func2
         0     0%   100%      0.01s 0.013%  runtime/trace.Start.func1
         0     0%   100%      0.01s 0.013%  sync/atomic.(*Pointer[go.shape.struct { Name string; Data []uint8; Result int64; github.com/AlexsanderHamir/GenPool/test._ [16]uint8; Fields = github.com/AlexsanderHamir/GenPool/pool.Fields[github.com/AlexsanderHamir/GenPool/test.BenchmarkObject] }]).Store (inline)
     0.01s 0.013%   100%      0.01s 0.013%  sync/atomic.StorePointer
         0     0%   100%      0.01s 0.013%  syscall.Write (inline)
     0.01s 0.013%   100%      0.01s 0.013%  syscall.syscall
         0     0%   100%      0.01s 0.013%  syscall.write
         0     0%   100%      0.01s 0.013%  testing.(*B).run1.func1
     0.01s 0.013%   100%      0.01s 0.013%  testing.(*PB).Next (inline)
